[{"C:\\Users\\Bhaskar Sengupta\\Desktop\\react projects\\pagination\\src\\index.js":"1","C:\\Users\\Bhaskar Sengupta\\Desktop\\react projects\\pagination\\src\\App.js":"2"},{"size":220,"mtime":1607864256744,"results":"3","hashOfConfig":"4"},{"size":3082,"mtime":1607888358026,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1iip1nu",{"filePath":"9","messages":"10","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\Bhaskar Sengupta\\Desktop\\react projects\\pagination\\src\\index.js",[],["12","13"],"C:\\Users\\Bhaskar Sengupta\\Desktop\\react projects\\pagination\\src\\App.js",["14","15","16","17","18","19"],"import {React , useState ,useEffect} from 'react';\nimport'./App.css';\n\n\nfunction  Buttons({current,xindex,start})\n{\n  let but=[];\n  for(let i=1;i<=10;i++)\n  {\n    but.push(i);\n  }\n  console.log(xindex);\n  return (\n    <div>\n      {\n        but.map(item=>{\n        return (\n        <button onClick={()=>current(item)} style={{color:item-1==(xindex)?'blue':'',fontSize:item==xindex?'25px':'',height:'40px',width:'40px',background:'transparent',border:'2px solid blue',outline:'none',fontSize:'20px'}}>\n        {item}\n        \n        </button>\n        );\n        })\n      }\n    </div>\n  );\n}\nfunction App() {\n  const [data,getdata]=useState([]);\n  const [formatdata,getformatdata]=useState([]);\n  var [xindex,setindex]=useState(0);\n  const [start,setstart]=useState(1);\n  useEffect(()=>{\n    fetch('https://classmarker-app.herokuapp.com/mockData')\n    .then(res=>res.json())\n    .then(dataset=>{\n      getformatdata(dataset);\n      getdata(dataset.slice(0,20));\n      console.log(formatdata);\n    });\n  },[])\n \n  const current=(index)=>{  \n    index--;\n    setindex(index);\n    var newList=[...formatdata];\n    getdata(newList.slice((index*20),(index*20)+20));\n  }\n\n  const currentPrev=(index)=>{\n    index--;\n    setindex(index);\n    \n    var newList=[...formatdata];\n    getdata(newList.slice((index*20),(index*20)+20));\n  }\n\n  const currentNext=(index)=>{\n    index++;\n    setindex(index);\n    \n    var newList=[...formatdata];\n    getdata(newList.slice((index*20),(index*20)+20));\n  }\n\n  return (\n    <div className=\"App\" >\n    <h1 style={{textAlign:'center',fontWeight:'lighter',color:'#333'}}>My User List</h1>\n    <div style={{margin:''}}>\n    <div style={{display:'flex',justifyContent:\"center\"}}>\n    <button onClick={()=>currentPrev(xindex)} style={{marginRight:'5px',color:'#fff',height:'40px',width:'80px',background:'#034256',textTransform:'uppercase'}}>previous</button>\n    < Buttons  current={current} xindex={xindex} start={start}/>\n    <button onClick={()=>currentNext(xindex)} style={{marginLeft:'5px',color:'#fff',height:'40px',width:'80px',background:'#034256',textTransform:'uppercase'}}>next</button>\n    </div>\n     <table style={{fontFamily: 'arial, sans-serif',borderCollapse:'collapse', width: '90%',margin:'auto'}}>\n       <thead style={{background:'#ccc',border:'1px solid #000',width:'30px',height:'20px'}}>\n        <tr>\n        <td>sl.No</td>\n        <td>Name</td>\n         <td>Email</td>\n          <td>company</td>\n           <td>job</td>\n            <td>city</td> \n            <td>Contact No</td>\n            <td>Fav Movie</td>\n        </tr>\n       </thead>\n    {\n     data.map((item,index)=>{\n      return (\n        <tbody>\n         <tr style={{background:(index%2!=0)?'#ddd':''}}>\n        <td>{item.id}</td>\n        <td>{item.name}</td>\n        <td>{item.email}</td>\n        <td>{item.company}</td>\n        <td>{item.job}</td>\n        <td>{item.city}</td>\n        <td>{item.phone}</td>\n        <td>{item['Fav Movie']}</td>\n         </tr>\n       </tbody>\n   \n      )})}\n        </table>   \n    \n    \n    </div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":18,"column":65,"nodeType":"26","messageId":"27","endLine":18,"endColumn":67},{"ruleId":"24","severity":1,"message":"25","line":18,"column":99,"nodeType":"26","messageId":"27","endLine":18,"endColumn":101},{"ruleId":"28","severity":1,"message":"29","line":18,"column":209,"nodeType":"30","messageId":"27","endLine":18,"endColumn":217},{"ruleId":"31","severity":1,"message":"32","line":32,"column":16,"nodeType":"33","messageId":"34","endLine":32,"endColumn":24},{"ruleId":"35","severity":1,"message":"36","line":41,"column":5,"nodeType":"37","endLine":41,"endColumn":7,"suggestions":"38"},{"ruleId":"24","severity":1,"message":"39","line":92,"column":41,"nodeType":"26","messageId":"27","endLine":92,"endColumn":43},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression","no-unused-vars","'setstart' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formatdata'. Either include it or remove the dependency array.","ArrayExpression",["42"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [formatdata]",{"range":"45","text":"46"},[1003,1005],"[formatdata]"]